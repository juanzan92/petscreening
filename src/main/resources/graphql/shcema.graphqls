type Query {
    petById(p_id: String): Pet
    searchPets(criteria: PetSearchCriteria): [Pet]
    checkPetEligibility(petId: String!): PetEligibility
}

type Mutation {
    addPet(petInput: PetInput): Pet
}

type Pet {
    id: ID
    pId: String
    name: String
    birthdate: Date
    weight: Float
    breed:Breed
    owner: Owner
    trainingLevel: Int
    vaccinationStatus: String
}
type PetEligibility{
    petId: String
    isValidPet: Boolean

}


type Owner {
    id: ID
    pId:String
    name: String
    email: String
    address: String
    phone: String
}

enum Breed  {
    GOLDEN_RETRIEVER,
    CORGI,
    FRENCH_BULLDOG,
    POODLE
}

input PetSearchCriteria {
    name: String
    birthdate: Date
    weight: Float
    breed:Breed
    trainingLevel: Int
    vaccinationStatus: String
}

input PetInput {
    name: String!
    weight: Float!
    vaccinated: Boolean!
    breed: String!
    trainingLevel: Int!
    ownerInput: OwnerInput!
}

input OwnerInput {
    pId: String
    name: String
    email: String
    address: String
    phone:String
}

scalar Date
